{
  "openapi": "3.0.0",
  "info": {
    "title": "Hair Stylist Backend API",
    "description": "API for managing client details, appointments, and services for hair stylists, including user registration, login, and Twilio integration.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/clients": {
      "get": {
        "summary": "List all clients",
        "responses": {
          "200": {
            "description": "A list of clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new client",
        "requestBody": {
          "description": "Client to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created"
          }
        }
      }
    },
    "/clients/{clientId}": {
      "put": {
        "summary": "Update a client",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "The ID of the client to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated client data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated"
          },
          "404": {
            "description": "Client not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a client",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "description": "The ID of the client to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted"
          },
          "404": {
            "description": "Client not found"
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "List all services",
        "responses": {
          "200": {
            "description": "A list of services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new service",
        "requestBody": {
          "description": "Service details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Service created"
          }
        }
      }
    },
    "/services/{id}": {
      "put": {
        "summary": "Update an existing service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the service to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated service details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Service"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service updated"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the service to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/registration": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "description": "User data for registration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/twilio/send-sms": {
      "post": {
        "summary": "Send an SMS to a client",
        "requestBody": {
          "description": "SMS content and recipient",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "string",
                    "description": "The recipient phone number"
                  },
                  "message": {
                    "type": "string",
                    "description": "The message content"
                  }
                },
                "required": ["to", "message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SMS sent"
          },
          "400": {
            "description": "Error in sending SMS"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contactInfo": {
            "type": "string"
          }
        },
        "required": ["name", "contactInfo"]
      },
      "Service": {
        "type": "object",
        "required": ["name", "duration", "price"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the service"
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the service in minutes",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "Price of the service",
            "format": "double"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["username", "password", "email"]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": ["username", "password"]
      },
      "LoginSuccessResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token provided upon successful login"
          }
        }
      }
    }
  }
}